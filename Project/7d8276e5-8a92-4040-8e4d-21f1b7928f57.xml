<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>///Status extraction///&#xD;
	tmp_Status.ch := Status;&#xD;
	During_Fwd := tmp_Status.bit[0];&#xD;
	During_Rev := tmp_Status.bit[1];&#xD;
	Fault := tmp_Status.bit[3];&#xD;
	Warning := tmp_Status.bit[7];&#xD;
	Remote := tmp_Status.bit[9];&#xD;
	Freq_Match := tmp_Status.bit[12];&#xD;
	Connection_Error := tmp_Status.bit[15];&#xD;
&#xD;
///Command extraction///&#xD;
IF Enable THEN;&#xD;
	tmp_Command.bit[0] := Fwd;&#xD;
	tmp_Command.bit[1] := Rev;&#xD;
	ENO:=TRUE;&#xD;
ELSE&#xD;
	tmp_Command.bit[0] := FALSE;&#xD;
	tmp_Command.bit[1] := FALSE;&#xD;
	ENO:=FALSE;&#xD;
END_IF;&#xD;
	tmp_Command.bit[7] := Fault_Reset;&#xD;
	Command := tmp_Command.ch;&#xD;
&#xD;
///Frequence form a REAL value///&#xD;
IF Frequency_in&gt;0.01 THEN;&#xD;
	tmp_freq_in_real:=Frequency_in*100;&#xD;
	tmp_freq_in_int:=REAL_TO_UINT(tmp_freq_in_real);&#xD;
	Frequency_Reference:=tmp_freq_in_int;&#xD;
END_IF;&#xD;
&#xD;
//Convert Output_Frequency_Monitor to a REAL value//&#xD;
	tmp_freq_out_int:=Output_Frequency_Monitor;&#xD;
	tmp_freq_out_real:=UINT_TO_REAL(tmp_freq_out_int);&#xD;
	Frequency_out:=tmp_freq_out_real/100.0;&#xD;
	&#xD;
//Acceleration/Deceleration Time  in REAL value//&#xD;
IF Acceleration&gt;0.01 THEN;&#xD;
	tmp_acc_real:=Acceleration*100;&#xD;
	tmp_acc_int:=REAL_TO_INT(tmp_acc_real);&#xD;
	F002_1st_Acceleration:=tmp_acc_int;&#xD;
END_IF;&#xD;
&#xD;
IF Deceleration&gt;0.01 THEN;&#xD;
	tmp_dec_real:=Deceleration*100;&#xD;
	tmp_dec_int:=REAL_TO_INT(tmp_dec_real);&#xD;
	F003_1st_Deceleration:=tmp_dec_int;&#xD;
END_IF;&#xD;
	</Text></StructuredTextModel>